// Better for embedding font to project
@mixin embeddingFont($fontName, $fileName, $weight, $style) {
    @font-face {
        font-family: $fontName;
        src: url("../../fonts/#{$fontName}/#{$fileName}.ttf") format("truetype");
        font-weight: $weight;
        font-style: $style;
        font-variant: normal;
    }
}


// For calculating size for current screen width of device
@mixin adaptiveFontSize($desktopSize, $mobileSize, $type: 0) {
    // desktopSize — max font-size
    // mobileSize — min font-size
    $addSize: $desktopSize - $mobileSize;
    $maxWidth: 1340;

    @if $type == 1 {
        // if the screen size is smaller than $maxWidth
        font-size: $desktopSize + px;

        @media (max-width: #{$maxWidth + px}) {
            font-size: calc(#{$mobileSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
        }
    }

    @else if $type == 2 {
        // if the screen size is more than $maxWidth
        font-size: $desktopSize + px;

        @media (min-width: #{$maxWidth + px}) {
            font-size: calc(#{$mobileSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
        }
    }

    @else {
        // Always
        font-size: calc(#{$mobileSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
    }
}